<!doctype html>
<html>
  <head>
      <meta charset="utf-8">
      <title>TwoPaneJSTest</title>
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <link rel="stylesheet" href="normalize.css">
      <link rel="stylesheet" href="main.css">
      <style type="text/css">
          #pane2wrap {
              padding-left: 1em;
          }

          .TwoPaneJSContent {
              position: relative;
              width: inherit;
              height: inherit;
              cursor: grab;
          }

          .TwoPaneJSContent.panning {
              cursor: grabbing;
          }

          .TwoPaneJSDivider {
              position: absolute;
              z-index: 4;
              background: #111111;
              opacity: .5;
              width: 10px;
              height: inherit;
              cursor: ew-resize;
          }

          .TwoPaneJSPane {
              position: absolute;
              top: 0px;
              overflow: hidden;
          }

          .TwoPaneJSPane1 {
              z-index: 2;
              left: 0px;
          }

          .TwoPaneJSPane2 {
              z-index: 3;
              right: 0px;
          }

          .TwoPaneJSPane>* {
              position: absolute;
          }

          .TwoPaneJSSlider {
              display: block;
              clear: both;
          }

          #zoomSlider {
              position: absolute;
          }
      </style>
  </head>
  <body>

      <h1>TwoPaneJS Test</h1>

      <div id="pane2wrap">
          <div class="TwoPaneJS">
              <div class="TwoPaneJSDivider"></div>
              <div class="TwoPaneJSContent">
                  <div class="TwoPaneJSPane TwoPaneJSPane1"><img src="3280152297_25f8dc6179_z_lo.jpg" /></div>
                  <div class="TwoPaneJSPane TwoPaneJSPane2"><img src="3280152297_25f8dc6179_z_hi.jpg" /></div>
                  
                  <!--
        					<div class="TwoPaneJSPane TwoPaneJSPane1"><video src="big_buck_bunny_480p_surround-fix-lo.mp4" autoplay loop muted /></div>
                  <div class="TwoPaneJSPane TwoPaneJSPane2"><video src="big_buck_bunny_480p_surround-fix-hi.mp4" autoplay loop muted /></div>
                  -->

              </div>
          </div>
          <div class="TwoPaneJSSlider">
              <label><span>Zoom:</span>
                  <input id="zoomSlider" type="range" value="1" min="1" max="4" step=".01" />
              </label>
          </div>
      </div>

      <p>Photo credit: <a href="https://www.flickr.com/photos/torek/3280152297/">kirainet</a> via <a href="https://visualhunt.com/">Visual hunt</a> / <a href="http://creativecommons.org/licenses/by-nd/2.0/">CC BY-ND</a></p>

      <p>Video credit: &copy; 2008, Blender Foundation / <a href="https://bigbuckbunny.org">www.bigbuckbunny.org</a></p>

      <script src="https://code.jquery.com/jquery-2.2.2.min.js"></script>
      <script>
          window.jQuery || document.write('<script src="jquery-2.2.2.min.js"><\/script>')
      </script>
      <script>
          function dividerOnMouseDown(e) {
              e.preventDefault(); //  stop browser from trying to interpret this click and drag as a text selection
              $('.TwoPaneJSDivider').addClass('dragging');
              $(window).on('mousemove', globalOnMouseMove)
              $(window).on('mouseup', globalOnMouseUp);
              return false;
          }

          function contentPaneOnMouseDown(e) {
              e.preventDefault(); //  stoppit browser
              $('.TwoPaneJSContent').addClass('panning').data('grabOffset', {
                  'x': e.pageX - parseInt($('.TwoPaneJSPane>*').css('left')),
                  'y': e.pageY - parseInt($('.TwoPaneJSPane>*').css('top'))
              });
              $(window).on('mousemove', globalOnMouseMove)
              $(window).on('mouseup', globalOnMouseUp);
              return false;
          }

          function globalOnMouseMove(e) {

              //  make the math happen

              if ($('.TwoPaneJSDivider').hasClass('dragging')) { //  if the divider is dragging
                  setDivider(getPaneCoordsFromMouse(e.pageX));
              } else if ($('.TwoPaneJSContent').hasClass('panning')) { //  if the content is panning
                  var panCoords = getPanCoordsFromMouse(e.pageX, e.pageY);
                  setContentPan(panCoords.x, panCoords.y);
              }
          }

          function getPaneCoordsFromMouse(mousePageX) {
              var containerOffset = $('.TwoPaneJSContent').offset().left;
              var containerMousPos = parseInt(mousePageX - containerOffset);
              var lowBound = 0;
              var highBound = $('.TwoPaneJSContent').width() - $('.TwoPaneJSDivider').width();
              var dividerPos = Math.min(Math.max(containerMousPos, lowBound), highBound);

              return dividerPos;
          }

          function validatePanCoords(x, y) {

              //	taking stock

              var contWidth = $('.TwoPaneJSContent').width()
              var contHeight = $('.TwoPaneJSContent').height();

              var contentScaledWidth = $('.TwoPaneJSPane').width() * $('#zoomSlider')[0].value;
              var contentScaledHeight = $('.TwoPaneJSPane').height() * $('#zoomSlider')[0].value;

              //  go cardinals

              var nBound = Math.floor((contHeight - contentScaledHeight) / 2);
              var sBound = -nBound;

              var wBound = Math.floor((contWidth - contentScaledWidth) / 2);
              var eBound = -wBound;

              //	within the bounds of reason

              return {
                  'x': Math.max(Math.min(x, eBound), wBound),
                  'y': Math.max(Math.min(y, sBound), nBound)
              }
          }

          function getPanCoordsFromMouse(mousePageX, mousePageY) {

              //  if you give a mouse an offset

              var contMouseX = mousePageX - $('.TwoPaneJSContent').data('grabOffset').x;
              var contMouseY = mousePageY - $('.TwoPaneJSContent').data('grabOffset').y;

              //	external validation

              var validCoords = validatePanCoords(contMouseX, contMouseY);

              //	and ultimately gratification

              return {
                  'x': validCoords.x,
                  'y': validCoords.y
              }
          }

          function globalOnMouseUp(e) {

              $('.TwoPaneJSDivider').removeClass('dragging');
              $('.TwoPaneJSContent').removeClass('panning');

              $(this).off('mouseup', globalOnMouseUp).off('mousemove', globalOnMouseMove);
          }

          function setDivider(dividerPos) {
              var rightSize = $('.TwoPaneJSContent').width() - dividerPos;
              var leftSize = $('.TwoPaneJSContent').width() - leftSize;

              $('.TwoPaneJSDivider').css({
                  'margin-left': dividerPos
              });
              $('.TwoPaneJSPane1').css({
                  'width': leftSize
              });
              $('.TwoPaneJSPane2').css({
                  'width': rightSize,
                  'margin-left': dividerPos
              }).children().css({
                  'margin-left': -dividerPos
              });
          }

          function sliderOnChange(e) {
              zoomTo(e.target.value, true);
          }

          function zoomTo(scaleFactor, andPan) {
              $('.TwoPaneJSPane>*').css({
                  'transform': 'scale(' + scaleFactor + ', ' + scaleFactor + ')'
              });
              var validCoords = validatePanCoords(parseInt($('.TwoPaneJSPane>*').css('left')), parseInt($('.TwoPaneJSPane>*').css('top')));
              setContentPan(validCoords.x, validCoords.y);
          }

          function setContentPan(left, top) {
              $('.TwoPaneJSPane>*').css({
                  'left': left,
                  'top': top
              });
          }

          $(function() {

              //  size2start

              $('.TwoPaneJS,.TwoPaneJSPane').width($('.TwoPaneJSPane>*').width());
              $('.TwoPaneJS,.TwoPaneJSPane').height($('.TwoPaneJSPane>*').height());

              //  drag2compare

              $('.TwoPaneJSDivider')
                  .css({
                      'margin-left': (parseInt($('.TwoPaneJSContent').width() / 2) - ($('.TwoPaneJSDivider').width() / 2))
                  })
                  .data({
                      'isDragging': false
                  })
                  .on('mousedown', dividerOnMouseDown);
              setDivider($('.TwoPaneJS').width() / 2);

              //  slide2zoom

              $('#zoomSlider').on('change input', sliderOnChange);
              zoomTo($('#zoomSlider')[0].value, false);

              //  drag2pan

              $('.TwoPaneJSPane').on('mousedown', contentPaneOnMouseDown);
          })
      </script>
  </body>
</html>
